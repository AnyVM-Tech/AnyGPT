# API Server Configuration
PORT=3000

# --- Provider API Keys ---
# Add API keys for the providers you intend to use.
# The server can use environment variables as fallbacks or primary sources for API keys,
# often following a pattern like PROVIDER_API_KEY_<PROVIDER_ID_IN_UPPERCASE>.
# Example: If you have a provider with ID "openai-default" in providers.json,
# you might set its key here as:
PROVIDER_API_KEY_OPENAI_DEFAULT=""
PROVIDER_API_KEY_ANTHROPIC_DEFAULT=""
PROVIDER_API_KEY_GEMINI_DEFAULT="" # Or GOOGLE_API_KEY might be used by specific SDKs
PROVIDER_API_KEY_GROQ_DEFAULT=""
# Add other provider keys as needed. The exact variable name might depend on
# how they are referenced in `providers/handler.ts` or specific provider client files
# if they are directly read from process.env there.

# --- Router Enabling/Disabling ---
# Set to true to enable the routes, false to disable.
# If the variable is not present, the server typically defaults to true.
ENABLE_MODELS_ROUTES=true
ENABLE_ADMIN_ROUTES=true
ENABLE_OPENAI_ROUTES=true
ENABLE_ANTHROPIC_ROUTES=true
ENABLE_GEMINI_ROUTES=true
ENABLE_GROQ_ROUTES=true
# ENABLE_OPENROUTER_ROUTES=true # Example for other potential routers
# ENABLE_OLLAMA_ROUTES=true   # Example for other potential routers

# --- Optional: Redis Configuration (if db.ts or other modules are configured for Redis) ---
# REDIS_URL="redis://localhost:6379"
# REDIS_HOST="localhost"
# REDIS_PORT="6379"
# REDIS_PASSWORD=""

# --- Optional: Logging Configuration ---
# LOG_LEVEL="info" # Example levels: "debug", "info", "warn", "error"

# --- Optional: Default Admin User for Auto-Creation (if implemented) ---
# DEFAULT_ADMIN_USER_ID="admin"
# DEFAULT_ADMIN_API_KEY="your-predefined-strong-admin-key"